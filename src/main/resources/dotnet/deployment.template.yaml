- stage: deployment
  displayName: Deployment
  dependsOn: [ db_migration ]
  condition: succeeded('db_migration')
  variables:
    - group: ${{ variables['STAGE_NAME'] }}
  jobs:
    - job: check
      displayName: 'Check Resource Group'
      variables:
        AZURE_RESOURCE_GROUP: ${{ lower(variables['APP_NAME']) }}-${{ lower(variables['STAGE_NAME']) }}-$(AZURE_LOCATION_SHORT)-$(STAGE_COUNT)
      pool:
        vmImage: ubuntu-latest
      steps:
        - task: AzureCLI@2
          name: rg
          displayName: 'Task: Azure CLI'
          inputs:
            azureSubscription: ${{ upper(variables['PROJECT_NAME']) }}-AZURE-SUBSCRIPTION-${{ upper(variables['STAGE_NAME']) }}
            ScriptType: bash
            scriptLocation: inlineScript
            inlineScript: echo "##vso[task.setvariable variable=exists;isoutput=true]$(az group exists -n $AZURE_RESOURCE_GROUP)"
    - job: create_resource_group
      displayName: 'Create Resource Group'
      dependsOn: [ check ]
      condition: and(succeeded('check'), eq(dependencies.check.outputs['rg.exists'], 'false'))
      variables:
        AZURE_RESOURCE_GROUP: ${{ lower(variables['APP_NAME']) }}-${{ lower(variables['STAGE_NAME']) }}-$(AZURE_LOCATION_SHORT)-$(STAGE_COUNT)
      pool:
        vmImage: ubuntu-latest
      steps:
        - task: AzureCLI@2
          displayName: 'Create Resource-Group'
          inputs:
            azureSubscription: ${{ upper(variables['PROJECT_NAME']) }}-AZURE-SUBSCRIPTION-${{ upper(variables['STAGE_NAME']) }}
            ScriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              az group create \
              --location $(AZURE_LOCATION) \
              --name $(AZURE_RESOURCE_GROUP)
              
              az group wait --created \
              --resource-group $(AZURE_RESOURCE_GROUP)
    - job: create_container
      displayName: 'Create Container'
      variables:
        AZURE_RESOURCE_GROUP: ${{ lower(variables['APP_NAME']) }}-${{ lower(variables['STAGE_NAME']) }}-$(AZURE_LOCATION_SHORT)-$(STAGE_COUNT)
      pool:
        vmImage: ubuntu-latest
      steps:
        - task: AzureCLI@2
          displayName: 'Create Container'
          inputs:
            azureSubscription: ${{ upper(variables['PROJECT_NAME']) }}-AZURE-SUBSCRIPTION-${{ upper(variables['STAGE_NAME']) }}
            ScriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              az container create \
                --resource-group $(AZURE_RESOURCE_GROUP) \
                --name $(AZURE_RESOURCE_GROUP) \
                --image $(DOCKER_REGISTRY)/$(APP_NAME):$(VERSION) \
                --dns-name-label $(AZURE_RESOURCE_GROUP) \
                --ports $(APP_PORT) \
                --registry-login-server $(DOCKER_REGISTRY_URL) \
                --registry-username $(DOCKER_REGISTRY_USER) \
                --registry-password $(DOCKER_REGISTRY_PASSWORD) \
                --environment-variables GIT_COMMIT=$(GIT_COMMIT)